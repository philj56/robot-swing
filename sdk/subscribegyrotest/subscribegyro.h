/**
 * @author Emilie Wirbel
 *
 * This file was generated by Aldebaran Robotics ModuleGenerator
 */

#ifndef BUMPER_BUMPER_H
#define BUMPER_BUMPER_H

#include <boost/shared_ptr.hpp>
#include <alcommon/almodule.h>
#include <fstream>
#include <string>
#include <qi/os.hpp>
#include <alproxies/almemoryproxy.h>
#include <alproxies/altexttospeechproxy.h>
#include <althread/almutex.h>

namespace AL
{
  class ALBroker;
}

class SubscribeGyro : public AL::ALModule
{
  public:

    SubscribeGyro(boost::shared_ptr<AL::ALBroker> broker, const std::string& name);

    virtual ~SubscribeGyro();

    /** Overloading ALModule::init().
    * This is called right after the module has been loaded
    */
    virtual void init();

    /**
    * This method will be called every time the event RightSubscribeGyroPressed is raised.
    */
    //void onRightSubscribeGyroPressed();
    void onMoveForward();
    void onMoveBackward();

  private:
    AL::ALMemoryProxy fMemoryProxy;
    AL::ALTextToSpeechProxy fTtsProxy;
	qi::os::timeval	currentTime;
    boost::shared_ptr<AL::ALMutex> fCallbackMutex;
	std::fstream file;
    float fState;

};

#endif  // BUMPER_BUMPER_H

